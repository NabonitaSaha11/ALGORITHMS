# -*- coding: utf-8 -*-
"""task5

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZmXOjP8JD5kdVTXGd2udhzX__ub_yRFK
"""

input=open("input5_2.txt","r")
output=open("output5_2.txt","w")
n=input.readline().split()

destination=n[-1]
start='1'


new=[]
for val in range(int(n[1])):
  new.append(input.readline().split())

adjacent_list={}
for u,v in new:
  if u not in adjacent_list:
    adjacent_list[u]=[v]
  else:
    adjacent_list[u].append(v)
  if v not in adjacent_list:
    adjacent_list[v]=[u]
  else:
    adjacent_list[v].append(u)



def shortest_path(start,final):
        queue = []
        queue.append(start)
        while len(queue)!=0:
            curr = queue.pop(0)
            node = curr[-1]
            if node == final:
                return curr
            for adjacent in adjacent_list[node]:
                new1=list(curr)+[adjacent]
                queue.append(new1)

final_path =shortest_path(start,destination)
output.write("Time: "+str(len(final_path)-1))
output.write("\n")
output.write("Shortest Path: ")
for i in final_path:
  output.write(str(i)+" ")
input.close()
output.close()