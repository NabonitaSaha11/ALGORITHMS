# -*- coding: utf-8 -*-
"""LAB6 TASK 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1m24SiNDm0RGYRrolqNdlKmIfqDdsn3om
"""

input=open("input1_2.txt","r")
output=open("output1_2.txt","w")

def dijkstra():
    N, M =  map(int,input.readline().split())
    graph = {}
    for i in range(N):
      num = i + 1
      graph[num] = {}
    for j in range(M):
        u, v, w =  map(int,input.readline().split())
        graph[u][v] = w
    source = int(input.readline())
    distance_list = {}
    for node in graph:
          distance_list[node] = float('inf')
    distance_list[source] = 0


    visited = set()
    while len(visited) < len(graph):

        not_visited = []
        for node in graph:
          if node not in visited:
               not_visited.append(node)
        min_node = min(not_visited,key=lambda x: distance_list[x])
        visited.add(min_node)
        for adjacent, weight in graph[min_node].items():
            new_distance =weight+ distance_list[min_node]
            distance_list[adjacent] = min(distance_list[adjacent], new_distance)

    for node in range(1, N + 1):
        if distance_list[node] == float('inf') or node not in distance_list:
          output.write(str(-1)+" ")
        else:
           output.write(str(distance_list[node])+" ")

    input.close()
    output.close()
if __name__ == "__main__":
    dijkstra()