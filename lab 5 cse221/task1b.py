# -*- coding: utf-8 -*-
"""task1b .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V_64Hj0qYPQ4Vq_yn90XknxTGvffmeYa
"""

input = open('input1b_3.txt', 'r')
output = open('output1b_3.txt', 'w')
n=input.readline().split()
N=int(n[0])
M=int(n[1])

def bfsorder(N, prereq):
    list1=[]
    indegree=[0]*(N+1)
    for i in range(N+1):
      list1.append([])


    for courses in prereq:
        course1, course2 = courses
        list1[course1].append(course2)
        indegree[course2]+=1


    queue=[]
    for i in range(1,N+1):
        if indegree[i]==0:
            queue.append(i)

    format=[]
    while len(queue)!=0:
        course = queue.pop(0)
        format.append(course)

        for adjacent in list1[course]:
            indegree[adjacent]-=1
            if indegree[adjacent]==0:
                queue.append(adjacent)


    if len(format)!=N:
        return "IMPOSSIBLE"
    else:
      return format



prereq=[]
for val in range(M):
     prereq.append(list(map(int, input.readline().strip().split())))

ans= bfsorder(N, prereq)
if ans!="IMPOSSIBLE":
    for seq in ans:
        output.write(str(seq)+" ")
else:
   output.write(ans)

input.close()
output.close()